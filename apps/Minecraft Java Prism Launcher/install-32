#!/bin/bash
version=5.2-1

install_packages https://github.com/Pi-Apps-Coders/files/releases/download/large-files/prismlauncher_${version}_armhf.deb || exit 1

function version { echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'; }
# detect if script is running on a system with OpenGL lower than 3.3
if [ $(version $(glxinfo -B | sed -n "s/^OpenGL version string://p" | awk '{ print $1 }')) -lt $(version "3.3.0") ]; then
  warning "You are running a device that is not OpenGL 3.3 compliant or the OpenGL version could not be determined."
  warning "Adding a MESA_GL_VERSION_OVERRIDE to 3.3"
  warning "Vanilla up to 1.19.2 has been tested to work on Raspberry Pi but there is no guarantee that future Minecraft versions and mods like Sodium/Optifine will continute to work."
  #add the MESA override to the .desktop file
  sudo sed -i "s:^Exec=prismlauncher:Exec=env MESA_GL_VERSION_OVERRIDE=3.3 prismlauncher:g" /usr/share/applications/org.prismlauncher.PrismLauncher.desktop
fi

status "Installing Java 8 and 17"
# first check if lsb_release has an upstream option -u
# if not, check if there is an upstream-release file
# if not, check if there is a lsb-release.diverted file
# if not, assume that this is not a ubuntu derivative
if lsb_release -a -u &>/dev/null; then
  # This is a Ubuntu Derivative, checking the upstream-release version info
  __os_id="$(lsb_release -s -i -u)"
  __os_desc="$(lsb_release -s -d -u)"
  __os_release="$(lsb_release -s -r -u)"
  __os_codename="$(lsb_release -s -c -u)"
elif [ -f /etc/upstream-release/lsb-release ]; then
  # ubuntu 22.04+ linux mint no longer includes the lsb_release -u option
  # add a parser for the /etc/upstream-release/lsb-release file
  source /etc/upstream-release/lsb-release
  __os_id="$DISTRIB_ID"
  __os_desc="$DISTRIB_DESCRIPTION"
  __os_release="$DISTRIB_RELEASE"
  __os_codename="$DISTRIB_CODENAME"
  unset DISTRIB_ID DISTRIB_DESCRIPTION DISTRIB_RELEASE DISTRIB_CODENAME
elif [ -f /etc/lsb-release.diverted ]; then
  # ubuntu 22.04+ popOS no longer includes the /etc/upstream-release/lsb-release or the lsb_release -u option
  # add a parser for the new /etc/lsb-release.diverted file
  source /etc/lsb-release.diverted
  __os_id="$DISTRIB_ID"
  __os_desc="$DISTRIB_DESCRIPTION"
  __os_release="$DISTRIB_RELEASE"
  __os_codename="$DISTRIB_CODENAME"
  unset DISTRIB_ID DISTRIB_DESCRIPTION DISTRIB_RELEASE DISTRIB_CODENAME
else
  __os_id="$(lsb_release -s -i)"
  __os_desc="$(lsb_release -s -d)"
  __os_release="$(lsb_release -s -r)"
  __os_codename="$(lsb_release -s -c)"
fi
case "$__os_id" in
# Raspbian is not reported as a derivative of Debian (no /etc/upstream-release/lsb-release file)
Raspbian | Debian)
  case "$__os_codename" in
  bullseye | buster)
    install_packages lsb-release wget apt-transport-https gnupg || error "Failed to install dependencies"
    hash -r

    status "Adding Adoptium repository:"

    echo "- public key -> keyring"
    rm -f /tmp/adoptium-public-key /tmp/adoptium-archive-keyring.gpg
    wget -O /tmp/adoptium-public-key https://adoptium.jfrog.io/artifactory/api/security/keypair/default-gpg-key/public
    gpg --no-default-keyring --keyring /tmp/adoptium-keyring.gpg --import /tmp/adoptium-public-key
    rm -f /tmp/adoptium-public-key

    echo " - keyring -> GPG key"
    gpg --no-default-keyring --keyring /tmp/adoptium-keyring.gpg --export --output /tmp/adoptium-archive-keyring.gpg
    rm -f /tmp/adoptium-keyring.gpg

    echo " - Moving GPG key to /usr/share/keyrings"
    sudo mv -f /tmp/adoptium-archive-keyring.gpg /usr/share/keyrings

    echo " - Creating /etc/apt/sources.list.d/adoptium.list"
    echo "deb [signed-by=/usr/share/keyrings/adoptium-archive-keyring.gpg] https://adoptium.jfrog.io/artifactory/deb $__os_codename main" | sudo tee /etc/apt/sources.list.d/adoptium.list >/dev/null

    echo " - Installing temurin-8-jdk temurin-17-jdk"
    #try to install temurin and adoptopenjdk java versions; if it fails, remove repository to avoid breaking user's system
    (install_packages temurin-8-jdk temurin-17-jdk)
    if [ $? != 0 ]; then
      anything_installed_from_repo "https://adoptium.jfrog.io/artifactory/deb"
      if [ $? != 0 ]; then
        # nothing installed from repo, this check is to prevent removing repos which other pi-apps scripts or the user have used successfully
        # safe to remove
        sudo rm -f /etc/apt/sources.list.d/adoptium.list /usr/share/keyrings/adoptium-archive-keyring.gpg
      fi
      warning "Failed to install temurin packages. Adoptium repository has been removed." && warning "It is up to you to download and install a working java 8 and 17 version." && echo "" && warning "Continuing the install without them."
    fi
    ;;
  bookworm | sid)
    warning "You are running Debian $__os_codename which is an unstable repo, you may not have Java 8 or 17 installed by this script."
    java_8=""
    package_available openjdk-8-jre
    if [[ $? == "0" ]]; then
      java_8="openjdk-8-jre"
    fi
    java_17=""
    package_available openjdk-17-jre
    if [[ $? == "0" ]]; then
      java_17="openjdk-17-jre"
    fi
    if [ ! -z "$java_8" ] || [ ! -z "$java_17" ]; then
      # either java 8 or 17 is found to be available by package_available, attempt to install them
      install_packages $java_8 $java_17 || warning "Failed to install install a working java 8 or 17. You will have to install these yourself. Continuing the install without them."
    fi
    ;;
  *)
    error "Debian version ($__os_codename) is too old, update to debian Buster or newer"
    ;;
  esac
  ;;
Kali)
  install_packages wget apt-transport-https gnupg || error "Failed to install dependencies"
  hash -r

  status "Adding Adoptium repository:"

  echo "- public key -> keyring"
  rm -f /tmp/adoptium-public-key /tmp/adoptium-archive-keyring.gpg
  wget -O /tmp/adoptium-public-key https://adoptium.jfrog.io/artifactory/api/security/keypair/default-gpg-key/public
  gpg --no-default-keyring --keyring /tmp/adoptium-keyring.gpg --import /tmp/adoptium-public-key
  rm -f /tmp/adoptium-public-key

  echo " - keyring -> GPG key"
  gpg --no-default-keyring --keyring /tmp/adoptium-keyring.gpg --export --output /tmp/adoptium-archive-keyring.gpg
  rm -f /tmp/adoptium-keyring.gpg

  echo " - Moving GPG key to /usr/share/keyrings"
  sudo mv -f /tmp/adoptium-archive-keyring.gpg /usr/share/keyrings

  echo " - Creating /etc/apt/sources.list.d/adoptium.list"
  echo "deb [signed-by=/usr/share/keyrings/adoptium-archive-keyring.gpg] https://adoptium.jfrog.io/artifactory/deb buster main" | sudo tee /etc/apt/sources.list.d/adoptium.list >/dev/null

  echo " - Installing temurin-8-jdk temurin-17-jdk"
  #try to install temurin and adoptopenjdk java versions; if it fails, remove repository to avoid breaking user's system
  (install_packages temurin-8-jdk temurin-17-jdk)
  if [ $? != 0 ]; then
    anything_installed_from_repo "https://adoptium.jfrog.io/artifactory/deb"
    if [ $? != 0 ]; then
      # nothing installed from repo, this check is to prevent removing repos which other pi-apps scripts or the user have used successfully
      # safe to remove
      sudo rm -f /etc/apt/sources.list.d/adoptium.list /usr/share/keyrings/adoptium-archive-keyring.gpg
    fi
    warning "Failed to install temurin packages. Adoptium repository has been removed." && warning "It is up to you to download and install a working java 8 and 17 version." && echo "" && warning "Continuing the install without them."
  fi
  ;;
Ubuntu)
  case "$__os_codename" in
  bionic | focal | groovy)
    ppa_added=$(grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/* | grep -v list.save | grep -v deb-src | grep deb | grep openjdk-r | wc -l)
    if [[ $ppa_added -eq "1" ]]; then
      status "Skipping OpenJDK PPA, already added"
    else
      status "Adding OpenJDK PPA, needed for Minecraft 1.17+"
      ppa_name="openjdk-r/ppa" && ppa_installer
    fi
    ;;
  *)
    requiredver="18.04"
    if printf '%s\n' "$requiredver" "$__os_release" | sort -CV; then
      status "Skipping OpenJDK PPA, $__os_codename already has openjdk-17 in the default repositories"
    else
      error_user "$__os_codename appears to be too old to run/compile MultiMC5"
    fi
    ;;

  esac
  # install java
  install_packages openjdk-8-jre openjdk-17-jre || error "Failed to install java 8 and 17"
  ;;
*)
  error "$__os_id appears to be an unsupported OS"
  ;;
esac

status_green 'Installation is now done! You can open the launcher by going to Menu > Games > Prism Launcher'
