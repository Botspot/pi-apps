#!/bin/bash
version=6.16.2

# userinput function to display yad prompts to the user
function userinput_func {
  unset uniq_selection
  height=$(($(echo "$1" | grep -o '\\n' | wc -l) + 8))
  height_gui=$(echo $(( height * 15 + ${#@} * 20 + 100 )))
  height_gui_buttons=$(echo $(( height * 15 )))
  if [[ "${#@}" == "2" ]];then
    echo -e "$1" |  yad --fixed --no-escape --undecorated --show-uri --center --image "dialog-information" --borders="20" --title "User Info Prompt" \
    --text-info --fontname="@font@ 11" --wrap --width=800 --height=$height_gui --window-icon="${DIRECTORY}/apps/XMRig/icon-64.png" \
    --show-uri \
    --button="$2":0
    output="$2"
  elif [[ "${#@}" == "3" ]];then
    yad --image "dialog-question" \
    --borders="20" --height=$height_gui_buttons --center --fixed\
    --window-icon=${DIRECTORY}/apps/XMRig/icon-64.png \
    --text="$1" \
    --button="$2":0 \
    --button="$3":1
    if [[ $? -ne 0 ]]; then
    output="$3"
    else
    output="$2"
    fi
  else
    for string in "${@:2}"; do
    uniq_selection+=(FALSE "$string")
    done
    uniq_selection[0]=TRUE
    output=$(
    yad --no-escape --undecorated --center \
      --borders="20" --height=$height_gui\
      --window-icon="${DIRECTORY}/apps/XMRig/icon-64.png" \
      --text "$1" \
      --list \
      --no-headers \
      --radiolist \
      --center \
      --fixed \
      --column "" \
      --column "Selection" \
      --print-column=2 \
      --separator='' \
      --button="Ok":0 \
      "${uniq_selection[@]}"
    )
  fi
}

function userinput_text_func {
  yad --center --wrap --text "$1" --entry --button="Ok":0
}

default_table=("Yes" "No")

function config_helper() {
    # Set mining pool

    check=0
    until [ "$check" == "1" ]; do
        pool_pref=$(userinput_text_func "What mining pool do you want to use?  Example: gulf.moneroocean.stream:10032")
        table=("Yes" "No")
        userinput_func "Your mining pool will be set to ${pool_pref}. Is this ok?" "${default_table[@]}"
        case $output in
            Yes) check=1; status_green "Your pool is now set to ${pool_pref}. You can change this by editing the '\"url\":' field in '$HOME/.config/xmrig.json.'." ;;
            No) check=0 ;;
            *) check=0; echo 'Invalid input! Please answer y/n, or yes/no.' ;;
        esac
    done

    # Set SSL/TLS options

    userinput_func "Does your mining pool support SSL/TLS? If you don't know what this is, just say no." "${default_table[@]}"
    case $output in
        Yes) tls="true"; status_green "Your config now has SSL/TLS enabled. You can change this by editing the '\"tls\":' field in '$HOME/.config/xmrig.json.'." ;;
        *) tls="false";;
    esac

    # Set keepalive options

    userinput_func "Does your mining pool support keepalived packets? If you don't know what this is, just say no." "${default_table[@]}"
    case $output in
        Yes) keepalived="true"; status_green "Your config now has keepalived packets enabled. You can change this by editing the '\"keepalive\":' field in '$HOME/.config/xmrig.json'." ;;
        *) keepalived="false" ;;
    esac


    # Set Wallet Address

    check=0
    until [ "$check" == "1" ]; do
        wallet_address=$(userinput_text_func "What is your Wallet Address? This will only be used in $HOME/xmrig/bullseye/root/.config/xmrig.json.")
        userinput_func "Your Wallet Address will be set to $wallet_address. Is this ok?" "${default_table[@]}"
        case $output in
            Yes) check=1; status_green "Your Wallet Address is now set to ${wallet_address}. You can change this by editing the '\"user\":' field in '$HOME/.config/xmrig.json'." ;;
            No) check=0 ;;
            *) check=0; echo 'Invalid input! Please answer y/n, or yes/no.' ;;
        esac
    done

    # Set miner name

    check=0
    userinput_func "Do you want to name your Miner?" "${default_table[@]}"
    if [ "$output" == "Yes" ]; then
        until [ "$check" == "1" ]; do
            miner_name=$(userinput_text_func "What to you want to name your Miner?")
            userinput_func "Your Miner's name will be ${miner_name}. Is this ok?" "${default_table[@]}"
            case $output in
                Yes) check=1; status_green "Your Miner's name is now set to ${miner_name}. You can change this by editing the '\"rig-id\":' field in '$HOME/.config/xmrig.json'." ;;
                No) check=0 ;;
                *) check=0; echo 'Invalid input! Please answer y/n, or yes/no.' ;;
            esac
        done
    else
        status "You chose not to name your Miner. If you change your mind, you can edit the '\"rig-id\":' line in '$HOME/.config/xmrig.json'. Continuing..."
    fi

    # copy the settings to $HOME/.config/xmrig.json.

    cat << EOT | sudo tee $HOME/.config/xmrig.json || error '$HOME/.config/xmrig.json!'
{
    "autosave": true,
    "cpu": true,
    "opencl": false,
    "cuda": false,
    "pools": [
        {
            "url": "${pool_pref}",
            "user": "${wallet_address}",
            "rig-id": "${miner_name}",
            "keepalive": ${keepalived},
            "tls": ${tls}
        }
    ]
}
EOT

} # End config_helper()

cd $HOME
install_packages git build-essential cmake libuv1-dev libssl-dev libhwloc-dev || exit 1
git_clone --branch $version https://github.com/xmrig/xmrig || error 'Failed to clone repository!'
mkdir $HOME/xmrig/build && cd $HOME/xmrig/build || error 'Failed to create and cd into build directory!'
cmake .. || error 'Failed to generate build files!'
make -j$(nproc) || error 'Failed to build XMRig!'
sudo cp $HOME/xmrig/build/xmrig /usr/bin/xmrig

userinput_func "Do you want to setup your xmrig.json? This will make running xmrig easier."
if [ "$output" == "Yes" ]; then
    status_green "\nStarting helper..."
    config_helper
else
    status '\nI won'\''t run the config helper...'
fi
