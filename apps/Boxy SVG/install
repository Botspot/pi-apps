#!/bin/bash

version=3.96.0.zip

install_packages libfontconfig-dev || exit 0

"${DIRECTORY}/manage" install-if-not-installed Node.js || error "Failed to install Node.js! This is necessary to compile Boxy SVG on your 32-bit OS."

#install asar and electron-packager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

wget -O /tmp/boxy-svg.zip "https://firebasestorage.googleapis.com/v0/b/boxy-svg.appspot.com/o/linux%2Fapp-${version}?alt=media" || exit 1

rm -rf /tmp/app
cd /tmp
unzip -q /tmp/boxy-svg.zip || error "Failed to extract!"
rm -f /tmp/boxy-svg.zip

cd /tmp/app
npm install || error "Failed to install npm dependencies!"
npm --prefix ./electron install || error "Failed to install npm dependencies in electron folder!"

if [ $arch == 32 ];then
  ./node_modules/.bin/electron-builder --armv7l
elif [ $arch == 64 ];then
  ./node_modules/.bin/electron-builder --arm64
else
  error "Failed to detect OS CPU architecture! Something is very wrong."
fi

#move to permanent folder
sudo rm -rf /opt/boxy-svg
sudo mv ./dist/linux-*-unpacked /opt/boxy-svg || error "Failed to move app files to /opt/boxy-svg!"

sudo mkdir -p /usr/local/share/icons
sudo cp ./metadata/com.boxy_svg.BoxySVG.svg /usr/local/share/icons
sudo cp ./metadata/com.boxy_svg.BoxySVG.png /usr/local/share/icons

cd
rm -rf /tmp/app

#compile xseticon to set the program's window icon
if ! command -v xseticon >/dev/null ;then
  echo "Compiling xseticon..."
  cd /tmp
  git_clone https://github.com/xeyownt/xseticon || exit 1
  cd /tmp/xseticon
  install_packages libxmu-headers libgd-dev libxmu-dev libglib2.0-dev || exit 1
  make || error "Failed to compile xseticon with the 'make' command!"
  sudo cp -f "$PWD/xseticon" /usr/local/bin
  (purge_packages)
  cd $HOME
  rm -rf /tmp/xseticon
fi

#create a runscript to set the window icon
cat << "EOF" | sudo tee /usr/local/bin/boxy-svg >/dev/null
#!/bin/bash
#This script runs Boxy SVG and will set its window-icon.

#determine how many Boxy SVG windows are already open
numwindows="$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)"

#run boxy-svg in background
/opt/boxy-svg/boxy-svg --no-sandbox "$@" &
pid=$!
#if this script is terminated, also kill boxy svg
trap "kill $pid &>/dev/null" EXIT

#run a loop in the background to always check for new boxy svg windows and set the window icon
IFS=$'\n'
if [ $numwindows == 0 ];then #only run one instance of the daemon
  while true;do
    if [ "$numwindows" != "$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)" ];then
      for windowid in $(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | awk '{print $1}') ;do
        xseticon -id $windowid "/usr/local/share/icons/com.boxy_svg.BoxySVG.png"
      done
      numwindows="$(xwininfo -tree -root | grep '^        .*("boxy.svg" "Boxy.SVG")' -i | wc -l)"
    fi
    sleep 0.5
  done &
  loop_pid=$!
fi

#wait for window background-process to be closed before returning to shell
wait $pid

#stop the icon-setting loop
code=$?
kill $loop_pid &>/dev/null
exit $code
EOF
sudo chmod +x /usr/local/bin/boxy-svg

if [ -z "$(cat ~/.config/mimeapps.list | grep 'boxy-svg.desktop')" ];then
  echo "Associating the SVG mimetype with Boxy SVG..."
  echo "image/svg+xml;application/illustrator=boxy-svg.desktop;" >> ~/.config/mimeapps.list
fi

echo "[Desktop Entry]
Name=Boxy SVG
Comment=Scalable Vector Graphics (SVG) editor
Exec=boxy-svg %u
Icon=com.boxy_svg.BoxySVG
Type=Application
Terminal=false
Categories=Graphics
StartupWMClass=Boxy SVG
MimeType=image/svg+xml;image/png;image/jpeg;image/gif;image/webp;application/pdf;application/illustrator;
Keywords=SVG;Vector;Graphics;Editor;" | sudo tee /usr/share/applications/boxy-svg.desktop >/dev/null
